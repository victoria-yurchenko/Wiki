// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wiki.Data;

#nullable disable

namespace Wiki.Migrations
{
    [DbContext(typeof(WikiDb))]
    partial class WikiDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Wiki.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArticleImageId")
                        .HasColumnType("int");

                    b.Property<int?>("ArticleParagraphId")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleImageId");

                    b.HasIndex("ArticleParagraphId");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Wiki.Models.ArticleImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ArticleImage");
                });

            modelBuilder.Entity("Wiki.Models.ArticleParagraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("ParagraphId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ArticleParagraph");
                });

            modelBuilder.Entity("Wiki.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArticleImageId")
                        .HasColumnType("int");

                    b.Property<string>("Base64Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleImageId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Wiki.Models.Paragraph", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArticleParagraphId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleParagraphId");

                    b.ToTable("Paragraph");
                });

            modelBuilder.Entity("Wiki.Models.Article", b =>
                {
                    b.HasOne("Wiki.Models.ArticleImage", null)
                        .WithMany("Article")
                        .HasForeignKey("ArticleImageId");

                    b.HasOne("Wiki.Models.ArticleParagraph", null)
                        .WithMany("Article")
                        .HasForeignKey("ArticleParagraphId");
                });

            modelBuilder.Entity("Wiki.Models.Image", b =>
                {
                    b.HasOne("Wiki.Models.ArticleImage", null)
                        .WithMany("Image")
                        .HasForeignKey("ArticleImageId");
                });

            modelBuilder.Entity("Wiki.Models.Paragraph", b =>
                {
                    b.HasOne("Wiki.Models.ArticleParagraph", null)
                        .WithMany("Paragraph")
                        .HasForeignKey("ArticleParagraphId");
                });

            modelBuilder.Entity("Wiki.Models.ArticleImage", b =>
                {
                    b.Navigation("Article");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Wiki.Models.ArticleParagraph", b =>
                {
                    b.Navigation("Article");

                    b.Navigation("Paragraph");
                });
#pragma warning restore 612, 618
        }
    }
}
